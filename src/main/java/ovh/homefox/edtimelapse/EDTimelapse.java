/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ovh.homefox.edtimelapse;

import ovh.homefox.edtimelapse.dialogs.OptionPanes;
import java.util.Date;
import java.util.Timer;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import ovh.homefox.edtimelapse.timertasks.StopTakingScreenshots;
import ovh.homefox.edtimelapse.timertasks.TakeScreenshots;

/**
 *
 * @author aymer
 */
public class EDTimelapse extends javax.swing.JFrame {
    
    OptionPanes optionPanes = new OptionPanes();

    /**
     * Creates new form EDTimelapse
     */
    public EDTimelapse() {
        initComponents();
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        startButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("EDTimelapse");

        startButton.setText("Start");
        startButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(startButton)
                .addContainerGap(333, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(startButton)
                .addContainerGap(266, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void startButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startButtonActionPerformed
        startButton.setEnabled(false);
        startTakingScreenshots(500, 1000);
    }//GEN-LAST:event_startButtonActionPerformed

    /**
     * Fonction de lancement des timers pour la prise de screenshots.
     * @param timeBetweenEachScreenshot Durée entre chaque screenshot, en ms.
     * @param globalLength Durée globale de la capture, en ms. Si la valeur est à 0, la prise s'arrêtera lorsque l'utilisateur le choisira.
     */
    private void startTakingScreenshots(long timeBetweenEachScreenshot, long globalLength){
        Timer screenshotTimer = new Timer();
        if(globalLength > 0){
            Timer stopTakingScreenshotsTimer = new Timer();
            StopTakingScreenshots stopTakingScreenshots = new StopTakingScreenshots(screenshotTimer, startButton);
            stopTakingScreenshotsTimer.schedule(stopTakingScreenshots, globalLength);
            optionPanes.displayProgressBar();
        }
        screenshotTimer.scheduleAtFixedRate(new TakeScreenshots(), new Date(), timeBetweenEachScreenshot);
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        // Set system Look & Feel
        try {
            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
        } catch (UnsupportedLookAndFeelException | ClassNotFoundException | InstantiationException | IllegalAccessException e) {
           java.util.logging.Logger.getLogger(EDTimelapse.class.getName()).log(java.util.logging.Level.SEVERE, null, e);
        }
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new EDTimelapse().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton startButton;
    // End of variables declaration//GEN-END:variables
}
